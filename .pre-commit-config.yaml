repos:
  # Ruff - Fast Python linter with autofix
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        name: ruff (lint)
        args: [--fix, --exit-non-zero-on-fix]
        description: "Run Ruff linter with autofix"
      - id: ruff-format
        name: ruff (format)
        description: "Run Ruff formatter"

  # Black - Python code formatter (backup in case ruff format misses anything)
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        name: black
        description: "Format Python code with Black"

  # MyPy - Static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.0
    hooks:
      - id: mypy
        name: mypy
        description: "Static type checking with MyPy"
        args: [--config-file=mypy.ini]
        additional_dependencies:
          - types-requests
          - pandas-stubs
          - types-setuptools
          - pytest
        # Only check core business logic and main modules
        files: ^(dgi/(screener|filtering|scoring|portfolio|repositories)\.py|dgi/providers/|tests/test_(filtering|scoring|portfolio)\.py)$
        exclude: ^(tests/test_(providers|ai_chat|cli_helpers|screener_edge|screener|validation)\.py|ai_chat/|notebooks/|dgi/models/|dgi/validation\.py|dgi/cli\.py)$

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort
        description: "Sort Python imports"
        args: [--profile=black, --line-length=88]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: bandit
        description: "Security linting with Bandit"
        args: [--recursive, --skip, "B101,B601"]
        files: ^dgi/.*\.py$

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: prettier
        description: "Format YAML, JSON, and Markdown files"
        types_or: [yaml, json, markdown]
        args: [--prose-wrap=always, --print-width=88]

  # Conventional commits (optional but recommended)
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.2.0
    hooks:
      - id: conventional-pre-commit
        name: conventional-commits
        description: "Ensure commit messages follow conventional format"
        stages: [commit-msg]

  # Trailing whitespace and file endings
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        name: trailing-whitespace
        description: "Trim trailing whitespace"
      - id: end-of-file-fixer
        name: end-of-file-fixer
        description: "Ensure files end with newline"
      - id: check-yaml
        name: check-yaml
        description: "Validate YAML files"
      - id: check-toml
        name: check-toml
        description: "Validate TOML files"
      - id: check-merge-conflict
        name: check-merge-conflict
        description: "Check for merge conflict markers"
      - id: debug-statements
        name: debug-statements
        description: "Check for debug statements"
